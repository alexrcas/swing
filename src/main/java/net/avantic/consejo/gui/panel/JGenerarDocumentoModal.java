/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.avantic.consejo.gui.panel;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import java.util.SortedSet;
import java.util.TreeSet;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import net.avantic.consejo.model.Documento;
import net.avantic.consejo.model.Punto;

/**
 *
 * @author alexr
 */
public class JGenerarDocumentoModal extends javax.swing.JPanel {

    /**
     * Creates new form JGenerarDocumentoModal
     */
    public JGenerarDocumentoModal(ArrayList<Documento> documentosList) {
        initComponents();
        this.jLabel1.setText("El documento unificado se generará respetando el orden de los puntos y los documentos");
        
        ArrayList<String> puntosSet = new ArrayList<>();
        for (Documento documento : documentosList) {
            if (!puntosSet.contains(documento.getPunto().getNombre())) {
                puntosSet.add(documento.getPunto().getNombre());
            }
        }
        Collections.reverse(puntosSet);
        
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Documento Generado");

        DefaultTreeModel modelo = new DefaultTreeModel(root);
        
        this.jTree1.setModel(modelo);
       
        puntosSet.stream()
                .forEach(nombrePunto -> {
                    
                    DefaultMutableTreeNode nodoPunto = new DefaultMutableTreeNode(nombrePunto);
                    modelo.insertNodeInto(nodoPunto, root, 0);
                    
                    documentosList.stream()
                            .filter(documento -> documento.getPunto().getNombre().equals(nombrePunto))
                            .sorted((a, b) -> b.getPosicion().compareTo(a.getPosicion()))
                            .forEach(documento -> {
                                DefaultMutableTreeNode nodoDocumento = new DefaultMutableTreeNode(documento.getNombre());
                                modelo.insertNodeInto(nodoDocumento, nodoPunto, 0);
                            });
                });
        
        
        DefaultMutableTreeNode nodoActaConsejoAnterior = new DefaultMutableTreeNode("Acta del consejo anterior");
        modelo.insertNodeInto(nodoActaConsejoAnterior, root, 0);
        
        DefaultMutableTreeNode nodoIndice = new DefaultMutableTreeNode("Índice");
        modelo.insertNodeInto(nodoIndice, root, 0);
        
        DefaultMutableTreeNode nodoPortada = new DefaultMutableTreeNode("Portada");
        modelo.insertNodeInto(nodoPortada, root, 0);

        this.expandAllNodes(this.jTree1, 0, this.jTree1.getRowCount());
    }
    
    
    private void expandAllNodes(JTree tree, int startingIndex, int rowCount){
    for(int i=startingIndex;i<rowCount;++i){
        tree.expandRow(i);
    }

    if(tree.getRowCount()!=rowCount){
        expandAllNodes(tree, rowCount, tree.getRowCount());
    }
}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();

        jLabel1.setText("jLabel1");

        jScrollPane1.setViewportView(jTree1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
